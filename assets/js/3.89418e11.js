(window.webpackJsonp=window.webpackJsonp||[]).push([[3],{208:function(t,e,s){t.exports=s.p+"assets/img/ad3b5eeb-975f-4b80-a4d2-01ca1e1753d3.54a0fc96.png"},209:function(t,e,s){t.exports=s.p+"assets/img/05c1fe08-ffb8-4011-a886-d69c93675597.8f22a779.png"},210:function(t,e,s){t.exports=s.p+"assets/img/c020806a-da5e-4850-954a-f0d82337737f.abcbed75.png"},211:function(t,e,s){t.exports=s.p+"assets/img/fb516935-cba9-4a38-920b-80b8a5e7a5b3.20e54c9b.png"},212:function(t,e,s){t.exports=s.p+"assets/img/7dc519a4-7ddf-4033-9239-edc63014f270.5a68670f.png"},213:function(t,e,s){t.exports=s.p+"assets/img/3c856db5-7928-481c-8676-795264741f55.dfaebb7f.png"},214:function(t,e,s){t.exports=s.p+"assets/img/b1152211-970b-4858-8a2f-3db0f4a9ed05.6fec7ea9.png"},215:function(t,e,s){t.exports=s.p+"assets/img/be9ccacc-a411-4cc3-8768-1e3982442b2e.53244c2b.png"},216:function(t,e,s){t.exports=s.p+"assets/img/bd1ee61c-1392-42cd-aa39-6ec7a09da7dc.319fd76e.png"},217:function(t,e,s){t.exports=s.p+"assets/img/8e06bd4e-dae9-4082-bac0-0edd436a0a47.15aae685.png"},256:function(t,e,s){"use strict";s.r(e);var a=s(2),n=Object(a.a)({},function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"弹性布局"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#弹性布局","aria-hidden":"true"}},[t._v("#")]),t._v(" 弹性布局")]),t._v(" "),a("p",[t._v("弹性布局的目的是提供一种更加高效的方式来对容器中的条目进行布局、对齐和分配空间。在传统的布局方式中，"),a("code",[t._v("block")]),t._v(" 布局是把块在垂直方向从上到下依次排列的；而 "),a("code",[t._v("inline")]),t._v(" 布局则是在水平方向来排列。弹性盒子布局并没有这样内在的芳香限制，可以由开发人员自由操作。")]),t._v(" "),a("p",[t._v("适用场景：弹性布局适合于移动开发，在 Android 和 iOS 上也完美支持。")]),t._v(" "),a("p",[t._v("📌 CSS 的 "),a("code",[t._v("display")]),t._v(" 属性增加的 "),a("code",[t._v("flex")]),t._v(" 值，意为：让容器的显示模式为弹性盒子。")]),t._v(" "),a("div",{staticClass:"language-css extra-class"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".box")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("display")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" flex"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("blockquote",[a("p",[t._v("⚠️注意：设为 Flex 布局之后，子元素的 "),a("code",[t._v("float")]),t._v("、"),a("code",[t._v("clear")]),t._v(" 和 "),a("code",[t._v("vertical-align")]),t._v(" 属性将失效。")])]),t._v(" "),a("p",[t._v('采用 Flex 布局的元素，称为 Flex 容器（flex container），简称"容器"。它的所有子元素自动成为容器成员，称为 Flex 项目（flex item），简称"项目"。')]),t._v(" "),a("ul",[a("li",[t._v("弹性盒子的轴")]),t._v(" "),a("li",[t._v("Flex 容器属性")]),t._v(" "),a("li",[t._v("Flex 子项属性")])]),t._v(" "),a("h2",{attrs:{id:"弹性盒子的轴"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#弹性盒子的轴","aria-hidden":"true"}},[t._v("#")]),t._v(" 弹性盒子的轴")]),t._v(" "),a("p",[t._v("容器默认存在两根轴：水平的主轴 "),a("code",[t._v("main axis")]),t._v(" 和垂直的侧轴 "),a("code",[t._v("cross axis")]),t._v("。")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("主轴的开始位置（与边框的侧点）叫做 "),a("code",[t._v("main start")]),t._v("，结束位置叫做 "),a("code",[t._v("main end")]),t._v("。")])]),t._v(" "),a("li",[a("p",[t._v("侧轴（也叫交叉轴）的开始位置叫做 "),a("code",[t._v("cross start")]),t._v("，结束位置叫做 "),a("code",[t._v("cross end")]),t._v("。")])])]),t._v(" "),a("p",[a("img",{attrs:{src:s(208),alt:"弹性盒子的轴"}})]),t._v(" "),a("ul",[a("li",[a("code",[t._v("main axis")]),t._v("（主轴）：Flex 容器的主轴主要用来排列 Flex 子元素。它不一定是水平，这主要取决于 "),a("code",[t._v("flex-direction")]),t._v(" 属性。")]),t._v(" "),a("li",[a("code",[t._v("main-start")]),t._v("（主轴起点边）"),a("code",[t._v("main-end")]),t._v("（主轴终点边）：Flex 元素的排列从容器的主轴起点边开始，往主轴终点边结束。")]),t._v(" "),a("li",[a("code",[t._v("main size")]),t._v("：Flex 元素的在主轴方向的宽度或高度就是项目的主轴长度，Flex 元素的主轴长度属性是 "),a("code",[t._v("width")]),t._v(" 或 "),a("code",[t._v("height")]),t._v(" 属性，由哪一个对着主轴方向决定。")]),t._v(" "),a("li",[a("code",[t._v("cross axis")]),t._v("（和主轴垂直交叉的轴）：与主轴垂直的轴称作交叉轴。")]),t._v(" "),a("li",[a("code",[t._v("cross-start")]),t._v("（交叉轴起点边）"),a("code",[t._v("cross-end")]),t._v("（交叉轴终点边）：伸缩行的排列从容器的交叉轴起点边开始，往交叉轴终点边结束。")]),t._v(" "),a("li",[a("code",[t._v("cross size")]),t._v("：Flex 元素的在交叉轴方向的宽度或高度就是项目的交叉轴长度，Flex 元素的交叉轴长度属性是 "),a("code",[t._v("width")]),t._v(" 或 "),a("code",[t._v("height")]),t._v(" 属性，由哪一个对着交叉轴方向决定。")])]),t._v(" "),a("p",[t._v("Flex 子元素默认沿主轴排列。单个项目占据的主轴空间叫做 "),a("code",[t._v("main size")]),t._v("，占据的交叉轴空间叫做 "),a("code",[t._v("cross size")]),t._v("。")]),t._v(" "),a("p",[t._v("Flex 属性分为两部分，一部分作用于容器称容器属性，另一部分作用于子元素称为项目属性。")]),t._v(" "),a("h2",{attrs:{id:"容器属性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#容器属性","aria-hidden":"true"}},[t._v("#")]),t._v(" 容器属性")]),t._v(" "),a("div",{staticClass:"language-css extra-class"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".box")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("display")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" flex"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 或者 inline-flex */")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("上述写法，定义了一个 Flex 容器，根据设值的不同可以是块状容器或内联容器。这使得直接子容器拥有了一个 Flex 上下文。")]),t._v(" "),a("h3",{attrs:{id:"flex-direction"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#flex-direction","aria-hidden":"true"}},[t._v("#")]),t._v(" flex-direction")]),t._v(" "),a("p",[a("code",[t._v("flex-direction")]),t._v(" 属性决定主轴的方向，继而决定子容器在容器中的位置。")]),t._v(" "),a("div",{staticClass:"language-css extra-class"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".box")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("flex-direction")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" row | row-reverse | column | column-reverse"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("ul",[a("li",[a("code",[t._v("row")]),t._v("（默认值）：表示子容器从左向右排列。此时水平方向轴为主轴。")]),t._v(" "),a("li",[a("code",[t._v("row-reverse")]),t._v("：表示子容器从右向左排列。")]),t._v(" "),a("li",[a("code",[t._v("column")]),t._v("：表示子容器从上向下排列。此时垂直方向轴为主轴。")]),t._v(" "),a("li",[a("code",[t._v("column-reverse")]),t._v("：表示子容器从下向上排列。")])]),t._v(" "),a("p",[a("img",{attrs:{src:s(209),alt:"flex-direction"}})]),t._v(" "),a("h3",{attrs:{id:"flex-wrap"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#flex-wrap","aria-hidden":"true"}},[t._v("#")]),t._v(" flex-wrap")]),t._v(" "),a("p",[a("code",[t._v("flex-wrap")]),t._v(" 属性用于指定 Flex 子容器是否换行。")]),t._v(" "),a("div",{staticClass:"language-css extra-class"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".box")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("flex-wrap")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nowrap | wrap | wrap-reverse"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("ul",[a("li",[a("code",[t._v("nowrap")]),t._v("（默认值）：表示不换行，所有子项目单行排列，子项可能会溢出。")]),t._v(" "),a("li",[a("code",[t._v("wrap")]),t._v("：表示换行，所有子项目多行排列，溢出的子项会被放到下一行，按从上向下顺序排列。")]),t._v(" "),a("li",[a("code",[t._v("wrap-reverse")]),t._v("：所有子项目多行排列，按从下向上顺序排列。")])]),t._v(" "),a("p",[a("img",{attrs:{src:s(210),alt:"flex-wrap"}})]),t._v(" "),a("p",[t._v("从示例图中不难发现，换行以后两行之间产生了很大的间距，这个问题，在后面介绍的 "),a("code",[t._v("align-content")]),t._v(" 属性中可以得到很好的解决。")]),t._v(" "),a("h4",{attrs:{id:"flex-flow"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#flex-flow","aria-hidden":"true"}},[t._v("#")]),t._v(" ### flex-flow")]),t._v(" "),a("p",[a("code",[t._v("flex-flow")]),t._v(" 属性是 "),a("code",[t._v("flex-direction")]),t._v(" 属性和 "),a("code",[t._v("flex-wrap")]),t._v(" 属性的简写形式，默认值为 "),a("code",[t._v("row nowrap")]),t._v("。")]),t._v(" "),a("div",{staticClass:"language-css extra-class"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".box")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("flex-flow")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" <"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'flex-direction'")]),t._v("> || <"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'flex-wrap'")]),t._v(">"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h3",{attrs:{id:"justify-content"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#justify-content","aria-hidden":"true"}},[t._v("#")]),t._v(" justify-content")]),t._v(" "),a("p",[a("code",[t._v("justify-content")]),t._v(" 属性定义了子容器在主轴（水平方向）上的对齐方式。")]),t._v(" "),a("div",{staticClass:"language-css extra-class"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".box")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("justify-content")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" flex-start | flex-end | center | space-between | space-around"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("ul",[a("li",[a("code",[t._v("flex-start")]),t._v("（默认值）：表示 Flex 子容器按主轴起点线对齐")]),t._v(" "),a("li",[a("code",[t._v("flex-end")]),t._v("：表示 Flex 子容器按主轴终点线对齐")]),t._v(" "),a("li",[a("code",[t._v("center")]),t._v("： 居中排列")]),t._v(" "),a("li",[a("code",[t._v("space-between")]),t._v("：Flex 子容器均匀分布，第一项紧贴主轴起点线，最后一项紧贴主轴终点线，子项目之间的间隔都相等。要注意特殊情况，当剩余空间为负数或者只有一个项时，效果等同于 "),a("code",[t._v("flex-start")]),t._v("。")]),t._v(" "),a("li",[a("code",[t._v("space-around")]),t._v("：Flex 子容器均匀分布，每个项目两侧的间隔相等，相邻项目之间的距离是两个项目之间留白的和。所以，项目之间的间隔比项目与边框的间隔大一倍。要注意特殊情况，当剩余空间为负数或者只有一个项时，效果等同于"),a("code",[t._v("center")]),t._v("。")]),t._v(" "),a("li",[a("code",[t._v("space-evenly")]),t._v("：Flex 子容器均匀分布，所有项目之间及项目与边框之间的距离相等。")])]),t._v(" "),a("p",[a("img",{attrs:{src:s(211),alt:"justify-content"}})]),t._v(" "),a("h3",{attrs:{id:"align-items"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#align-items","aria-hidden":"true"}},[t._v("#")]),t._v(" align-items")]),t._v(" "),a("p",[a("code",[t._v("align-items")]),t._v(" 属性定义 Flex 子项在交叉轴（垂直方向）上的对齐方式。")]),t._v(" "),a("div",{staticClass:"language-css extra-class"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".box")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("align-items")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" flex-start | flex-end | center | baseline | stretch"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("ul",[a("li",[a("code",[t._v("stretch")]),t._v("（默认值）：当子容器未设置高度或者高度为 "),a("code",[t._v("atuo")]),t._v(" 时，子容器的高度设为行高。这里需要注意，在只有一行的情况下，行的高度为容器的高度，即子容器高度为容器的高度。")]),t._v(" "),a("li",[a("code",[t._v("flex-start")]),t._v("：表示子容器与交叉轴的起点线对齐。")]),t._v(" "),a("li",[a("code",[t._v("flex-end")]),t._v("：表示子容器与交叉轴的终点线对齐。")]),t._v(" "),a("li",[a("code",[t._v("center")]),t._v("：表示与交叉轴的中线对齐。")]),t._v(" "),a("li",[a("code",[t._v("baseline")]),t._v("：表示基线对齐，当行内轴与侧轴在同一线上，即所有子容器的基线在同一线上时，效果等同于"),a("code",[t._v("flex-start")]),t._v("。")])]),t._v(" "),a("p",[a("img",{attrs:{src:s(212),alt:"align-items"}})]),t._v(" "),a("h3",{attrs:{id:"align-content"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#align-content","aria-hidden":"true"}},[t._v("#")]),t._v(" align-content")]),t._v(" "),a("p",[a("code",[t._v("align-content")]),t._v(" 属性定义了多根轴线的对齐方式。如果项目只有一根轴线，该属性不起作用。")]),t._v(" "),a("p",[t._v("核心是一定是盒子内部的元素超过了盒子容器的宽度（默认）出现了换行，也就是有多行才可以。")]),t._v(" "),a("div",{staticClass:"language-css extra-class"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".box")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("align-content")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" flex-start | flex-end | center | space-between | space-around | stretch"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("ul",[a("li",[a("code",[t._v("stretch")]),t._v("（默认值）：轴线占满整个交叉轴。")]),t._v(" "),a("li",[a("code",[t._v("flex-start")]),t._v("：表示各行与交叉轴的起点线对齐。")]),t._v(" "),a("li",[a("code",[t._v("flex-end")]),t._v("：表示各行与交叉轴的终点线对齐。")]),t._v(" "),a("li",[a("code",[t._v("center")]),t._v("：表示各行与交叉轴的中线对齐。")]),t._v(" "),a("li",[a("code",[t._v("space-between")]),t._v("：与交叉轴两端对齐，轴线之间的间隔平均分布。要注意特殊情况，当剩余空间为负数时，效果等同于"),a("code",[t._v("flex-start")]),t._v("。")]),t._v(" "),a("li",[a("code",[t._v("space-around")]),t._v("：每根轴线两侧的间隔都相等。所以，轴线之间的间隔比轴线与边框的间隔大一倍。要注意特殊情况，当剩余空间为负数时，效果等同于"),a("code",[t._v("center")]),t._v("。")])]),t._v(" "),a("p",[t._v("再次强调：该属性只作用于多行的情况，在只有一行的 Flex 容器上无效，另外该属性可以很好的处理，换行以后相邻行之间产生的间距。")]),t._v(" "),a("p",[a("img",{attrs:{src:s(213),alt:"align-content"}})]),t._v(" "),a("h2",{attrs:{id:"子容器属性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#子容器属性","aria-hidden":"true"}},[t._v("#")]),t._v(" 子容器属性")]),t._v(" "),a("h3",{attrs:{id:"order"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#order","aria-hidden":"true"}},[t._v("#")]),t._v(" order")]),t._v(" "),a("p",[t._v("缺省情况下，Flex 子容器是按照在代码中出现的先后顺序排列的。CSS3 新增加 "),a("code",[t._v("order")]),t._v(" 属性定义项目的排列顺序，是数值类型。数值越小，排列越靠前，默认为  0。")]),t._v(" "),a("blockquote",[a("p",[t._v("注意此属性设置在子容器上，浏览器自动按照 "),a("code",[t._v("order")]),t._v(" 的大小排序盒子，默认都是 0，如果相同的 "),a("code",[t._v("order")]),t._v(" 则按照编写标签的顺序排放盒子。")])]),t._v(" "),a("div",{staticClass:"language-css extra-class"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".item")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("order")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h3",{attrs:{id:"flex-grow"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#flex-grow","aria-hidden":"true"}},[t._v("#")]),t._v(" flex-grow")]),t._v(" "),a("p",[a("code",[t._v("flex-grow")]),t._v(" 属性定义子容器的扩展比例，取值必须是一个单位的正整数，表示放大的比例。默认为 0，即如果存在额外空间，也不放大，负值无效。Flex 容器会根据子容器设置的扩展比例作为比率来分配剩余空间")]),t._v(" "),a("p",[t._v("如果所有项目的 "),a("code",[t._v("flex-grow")]),t._v(" 属性都为 1，则它们将等分剩余空间（如果有的话）。如果一个项目的 "),a("code",[t._v("flex-grow")]),t._v(" 属性为 2，其他项目都为 1，则前者占据的剩余空间将比其他项多一倍。")]),t._v(" "),a("p",[t._v("一行的子盒子同时设置 "),a("code",[t._v("flex-grow")]),t._v(" 属性的话，会根据设置的值的大小按比例排放子容器。")]),t._v(" "),a("div",{staticClass:"language-css extra-class"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".item1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("flex-grow")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 5"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".item2")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("flex-grow")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 4"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".item3")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("flex-grow")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 3"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".item4")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("flex-grow")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".item5")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("flex-grow")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[a("img",{attrs:{src:s(214),alt:"flex-grow"}})]),t._v(" "),a("h3",{attrs:{id:"flex-shrink"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#flex-shrink","aria-hidden":"true"}},[t._v("#")]),t._v(" flex-shrink")]),t._v(" "),a("p",[a("code",[t._v("flex-shrink")]),t._v(" 属性定义了项目的缩小比例，默认为 1，即如果空间不足，该项目将缩小。")]),t._v(" "),a("div",{staticClass:"language-css extra-class"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".item")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("flex-shrink")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" <number>"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* default 1 */")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("如果所有项目的 "),a("code",[t._v("flex-shrink")]),t._v(" 属性都为 1，当空间不足时，都将等比例缩小。如果一个项目的 "),a("code",[t._v("flex-shrink")]),t._v(" 属性为 0，其他项目都为 1，则空间不足时，前者不缩小。")]),t._v(" "),a("blockquote",[a("p",[t._v("⚠️注意：负值对该属性无效。")])]),t._v(" "),a("p",[a("img",{attrs:{src:s(215),alt:"flex-shrink"}})]),t._v(" "),a("h3",{attrs:{id:"flex-basis"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#flex-basis","aria-hidden":"true"}},[t._v("#")]),t._v(" flex-basis")]),t._v(" "),a("p",[a("code",[t._v("flex-basis")]),t._v(" 属性定义了在分配多余空间之前，项目占据的主轴空间（main size）。浏览器根据这个属性，计算主轴是否有多余空间。它的默认值为 "),a("code",[t._v("auto")]),t._v("，即项目的本来大小。")]),t._v(" "),a("div",{staticClass:"language-css extra-class"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".item")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("flex-basis")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" <length> | auto"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* default auto */")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("它可以设为跟 "),a("code",[t._v("width")]),t._v(" 属性一样的值（比如 350px），则项目将占据固定空间。")]),t._v(" "),a("p",[a("img",{attrs:{src:s(216),alt:"flex-basis"}})]),t._v(" "),a("detail",[a("summary",[t._v("说明")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("flex-basis")]),t._v(" 的默认值为 "),a("code",[t._v("auto")]),t._v("（无特定宽度值，取决于其它属性值），浏览器将超出的空间，按照各子项"),a("code",[t._v("basis")]),t._v(" 的值的比例进行空间收缩。")]),t._v(" "),a("li",[t._v("图例中 5 定义了 "),a("code",[t._v("flex-basis:400px")]),t._v("，其余子项定义了 "),a("code",[t._v("flex-basis:200px")]),t._v("，我们给父容器 "),a("code",[t._v("width")]),t._v(" 定义为"),a("code",[t._v("800px")]),t._v("，5 个子项相加之后即为 "),a("code",[t._v("1200px")]),t._v("，超出父容器 "),a("code",[t._v("400px")]),t._v("。那么这么超出的 "),a("code",[t._v("400px")]),t._v(" 需要被这 5 个子项消化。")]),t._v(" "),a("li",[t._v("假定：这 5 个子项的比例为 1:1:1:1:2，则多出来的 "),a("code",[t._v("400px")]),t._v(" 要被分为 6 份，于是我们可以计算子项将被移除的溢出量是多少：")]),t._v(" "),a("li",[a("code",[t._v("flex-basis")]),t._v(" 为 "),a("code",[t._v("400px")]),t._v(" 的，被移除溢出量：400/6*2，即约等于 "),a("code",[t._v("133.33px")])]),t._v(" "),a("li",[a("code",[t._v("flex-basis")]),t._v(" 为 "),a("code",[t._v("200px")]),t._v(" 的，被移除溢出量：400/6*1，即约等于 "),a("code",[t._v("66.67px")])]),t._v(" "),a("li",[t._v("最后实际宽度分别为："),a("code",[t._v("400-133.33=266.67px")]),t._v(", "),a("code",[t._v("200-66.67=133.33px")]),t._v(" "),a("code",[t._v("flex-basis:[percentage]")]),t._v(" 与 "),a("code",[t._v("[length]")]),t._v(" 的计算方式类似")]),t._v(" "),a("li",[t._v("它可以设为跟 "),a("code",[t._v("width")]),t._v(" 属性一样的值（比如 350px），则项目将占据固定空间。")])])]),t._v(" "),a("p",[t._v("⚠️注意：")]),t._v(" "),a("ol",[a("li",[t._v("设置 "),a("code",[t._v("flex-grow")]),t._v(" 进行分配剩余空间，或者使用 "),a("code",[t._v("flex-shrink")]),t._v(" 进行收缩都是在 "),a("code",[t._v("flex-basis")]),t._v(" 的基础上进行的；")]),t._v(" "),a("li",[t._v("当 "),a("code",[t._v("flex-basis")]),t._v(" 的值以及 "),a("code",[t._v("width")]),t._v("（或者 "),a("code",[t._v("height")]),t._v("）的值均为非 "),a("code",[t._v("auto")]),t._v(" 时，\n"),a("ul",[a("li",[t._v("若 content 长度同时大于 "),a("code",[t._v("flex-basis")]),t._v(" 的值以及 "),a("code",[t._v("width")]),t._v("（或者 "),a("code",[t._v("height")]),t._v("）的值，此时以 "),a("code",[t._v("flex-basis")]),t._v(" 与 "),a("code",[t._v("width")]),t._v("（或者 "),a("code",[t._v("height")]),t._v("）中值大的为准 ，"),a("strong",[t._v("但是")]),t._v("，如果子项设置了"),a("code",[t._v("overflow: hidden")]),t._v(" 或者 "),a("code",[t._v("overflow: auto")]),t._v("，此时以"),a("code",[t._v("flex-basis")]),t._v("值为准；")]),t._v(" "),a("li",[t._v("若 content 长度同时小于 "),a("code",[t._v("flex-basis")]),t._v(" 的值以及 "),a("code",[t._v("width")]),t._v("（或者 "),a("code",[t._v("height")]),t._v("）的值，此时以 "),a("code",[t._v("flex-basis")]),t._v(" 值为准")]),t._v(" "),a("li",[t._v("若 content 长度小于 "),a("code",[t._v("flex-basis")]),t._v(" 的值，大于 "),a("code",[t._v("width")]),t._v("（或者 "),a("code",[t._v("height")]),t._v("）的值，此时以 "),a("code",[t._v("flex-basis")]),t._v(" 值为准；")]),t._v(" "),a("li",[t._v("若 content 长度大于 "),a("code",[t._v("flex-basis")]),t._v(" 的值，小于 "),a("code",[t._v("width")]),t._v("（或者 "),a("code",[t._v("height")]),t._v("）的值，此时以 content 自身长度值为准；")])])]),t._v(" "),a("li",[t._v("当 "),a("code",[t._v("width")]),t._v("（或者 "),a("code",[t._v("height")]),t._v("）的值为 "),a("code",[t._v("auto")]),t._v(" 时，且内容的长度大于 "),a("code",[t._v("flex-basis")]),t._v("设置的值，此时以 "),a("code",[t._v("content")]),t._v(" 自身长度值为准，且"),a("strong",[t._v("不能进行 "),a("code",[t._v("flex-shrink")]),t._v(" 收缩")]),t._v("。相反如果内容的长度小于 "),a("code",[t._v("flex-basis")]),t._v(" 设置的值，则会使用 "),a("code",[t._v("flex-basis")]),t._v(" 设置的值；")]),t._v(" "),a("li",[t._v("当存在最小值 "),a("code",[t._v("min-width")]),t._v("（"),a("code",[t._v("min-height")]),t._v("）时，且 "),a("code",[t._v("flex-basis")]),t._v(" 的值小于最小值时，宽度以最小值为准，当 "),a("code",[t._v("flex-basis")]),t._v(" 的值大于最小值时，以 "),a("code",[t._v("flex-basis")]),t._v(" 的值为准。")])]),t._v(" "),a("h3",{attrs:{id:"flex"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#flex","aria-hidden":"true"}},[t._v("#")]),t._v(" flex")]),t._v(" "),a("p",[a("code",[t._v("flex")]),t._v(" 属性是 "),a("code",[t._v("flex-grow")]),t._v("、"),a("code",[t._v("flex-shrink")]),t._v(" 和 "),a("code",[t._v("flex-basis")]),t._v(" 的简写，默认值为 "),a("code",[t._v("0 1 auto")]),t._v("。后两个属性可选。")]),t._v(" "),a("div",{staticClass:"language-css extra-class"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".item")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("flex")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" none | [ <"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'flex-grow'")]),t._v("> <"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'flex-shrink'")]),t._v(">? || <"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'flex-basis'")]),t._v("> ]\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("该属性有两个快捷值："),a("code",[t._v("auto (1 1 auto)")]),t._v(" 和 "),a("code",[t._v("none (0 0 auto)")]),t._v("。")]),t._v(" "),a("p",[t._v("建议优先使用这个属性，而不是单独写三个分离的属性，因为浏览器会推算相关值。")]),t._v(" "),a("h3",{attrs:{id:"align-self"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#align-self","aria-hidden":"true"}},[t._v("#")]),t._v(" align-self")]),t._v(" "),a("p",[a("code",[t._v("align-self")]),t._v(" 属性用于指定子容器的对齐方式，可覆盖 "),a("code",[t._v("align-items")]),t._v(" 属性。")]),t._v(" "),a("p",[t._v("默认值为 "),a("code",[t._v("auto")]),t._v("，表示继承父元素的 "),a("code",[t._v("align-items")]),t._v(" 属性，如果没有父元素，则等同于 "),a("code",[t._v("stretch")]),t._v("。")]),t._v(" "),a("div",{staticClass:"language-css extra-class"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".item")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("align-self")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" auto || flex-start || flex-end || center || baseline || stretch"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[a("img",{attrs:{src:s(217),alt:"align-self"}})]),t._v(" "),a("h2",{attrs:{id:"兼容性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#兼容性","aria-hidden":"true"}},[t._v("#")]),t._v(" 兼容性")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("Chrome")]),t._v(" "),a("th",[t._v("Safari")]),t._v(" "),a("th",[t._v("Firefox")]),t._v(" "),a("th",[t._v("Opera")]),t._v(" "),a("th",[t._v("IE")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("21+")]),t._v(" "),a("td",[t._v("6.1+")]),t._v(" "),a("td",[t._v("22+")]),t._v(" "),a("td",[t._v("12.1+")]),t._v(" "),a("td",[t._v("11+")])])])]),t._v(" "),a("p",[t._v("Flexbox 需要一些特定的前缀以支持大多数的浏览器。甚至还存在完全不同的属性名称或属性值。这就需要 "),a("a",{attrs:{href:"https://link.juejin.im/?target=https%3A%2F%2Fgithub.com%2Fpostcss%2Fautoprefixer",target:"_blank",rel:"noopener noreferrer"}},[t._v("Autoprefixer"),a("OutboundLink")],1),t._v(" 或类似的 CSS 后处理器的辅助，具体内容请参考相关文档。")]),t._v(" "),a("ul",[a("li",[t._v("Webkit 内核浏览器应使用前缀 "),a("code",[t._v("-webkit")])]),t._v(" "),a("li",[t._v("IE10 浏览器只有部分属性兼容，需使用前缀 "),a("code",[t._v("-ms")])])]),t._v(" "),a("h2",{attrs:{id:"总结"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#总结","aria-hidden":"true"}},[t._v("#")]),t._v(" 总结")]),t._v(" "),a("p",[t._v("这里假设 flex 容器为 "),a("code",[t._v(".box")]),t._v("，子元素为 "),a("code",[t._v(".item")]),t._v("。")]),t._v(" "),a("h3",{attrs:{id:"定义容器为弹性布局"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#定义容器为弹性布局","aria-hidden":"true"}},[t._v("#")]),t._v(" 定义容器为弹性布局")]),t._v(" "),a("div",{staticClass:"language-css extra-class"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".box")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("display")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" flex"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 行内flex */")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".item")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("display")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" inline-flex"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h3",{attrs:{id:"容器样式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#容器样式","aria-hidden":"true"}},[t._v("#")]),t._v(" 容器样式")]),t._v(" "),a("div",{staticClass:"language-css extra-class"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".box")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("flex-direction")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" row | row-reverse | column | column-reverse"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 主轴方向: 左到右（默认）| 右到左 | 上到下 | 下到上 */")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("flex-wrap")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nowrap | wrap | wrap-reverse"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 换行: 不换行（默认）| 换行 | 换行并第一行在下方 */")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("flex-flow")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" <flex-direction> | <flex-wrap>\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 主轴方向和换行简写 */")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("justify-content")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" flex-start | flex-end | center | space-between | space-around"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 主轴对齐方式: 左对齐（默认） | 右对齐 | 居中对齐 | 两端对齐 | 平均分布 */")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("align-items")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" flex-start | flex-end | center | baseline | stretch"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 交叉轴对齐方式: 顶部对齐（默认）| 底部对齐 | 居中对齐 | 上下对齐并铺满 | 文本基线对齐 */")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("align-content")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" flex-start | flex-end | center | space-between | space-around | stretch"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 多主轴对齐: 顶部对齐（默认）| 底部对齐 | 居中对齐 | 上下对齐并铺满 | 上下平均分布*/")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h3",{attrs:{id:"子元素样式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#子元素样式","aria-hidden":"true"}},[t._v("#")]),t._v(" 子元素样式")]),t._v(" "),a("div",{staticClass:"language-css extra-class"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".item")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("order")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" <integer>"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 排序: 数值越小,排越前,默认为0 */")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("flex-grow")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" <number>"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* default 0*/")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 放大: 默认0（即如果有剩余空间也不放大,值为1则放大,2是1的双倍大小,以此类推）*/")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("flex-shrink")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" <number>"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* default 1*/")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 缩小: 默认1（如果空间不足则会缩小,值为0不缩小）*/")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("flex-basis")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" <length> | auto"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* default auto */")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 固定大小: 默认为0,可以设置px值,也可以设置为百分比大小 */")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("flex")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" none | [<"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'flex-grow'")]),t._v("> <"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'flex-shrink'")]),t._v(">? || <"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'flex-basis'")]),t._v(">]\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* flex-grow, flex-shrink 和 flex-basis 的简写,默认值为0 1 auto */")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("align-self")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" auto | flex-start | flex-end | center | baseline | stretch"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 单独对齐方式: 自动（默认）| 顶部对齐 | 底部对齐 | 居中对齐 | 上下对齐并铺满 | 文本基线对齐 */")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("hr"),t._v(" "),a("p",[a("strong",[t._v("参考资料：")])]),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"https://css-tricks.com/snippets/css/a-guide-to-flexbox/",target:"_blank",rel:"noopener noreferrer"}},[t._v("A Complete Guide to Flexbox"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://www.w3.org/TR/css-flexbox-1/",target:"_blank",rel:"noopener noreferrer"}},[t._v("CSS Flexible Box Layout Module Level 1"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://codepen.io/enxaneta/full/adLPwv/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Codepen - Flex playground"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://juejin.im/post/591d74ad128fe1005cfc21cd",target:"_blank",rel:"noopener noreferrer"}},[t._v("掘金：CSS Flex 布局属性整理"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://www.html.cn/archives/8629",target:"_blank",rel:"noopener noreferrer"}},[t._v("CSS3 Flexbox 布局完全指南"),a("OutboundLink")],1)])])],1)},[],!1,null,null,null);e.default=n.exports}}]);